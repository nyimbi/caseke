# coding: utf-8 
# views.py AUTOGENERATED BY gen_script.sh from kp2.py
# Copyright (C) Nyimbi Odero, Fri Aug  4 05:59:21 EAT 2017
 
 
import calendar
from flask import redirect, flash, url_for, Markup
from flask import render_template
from flask_appbuilder.models.sqla.interface import SQLAInterface
from flask_appbuilder.views import ModelView, BaseView, MasterDetailView, MultipleView, RestCRUDView, CompactCRUDMixin
from flask_appbuilder import ModelView, CompactCRUDMixin, aggregate_count, action, expose, BaseView, has_access
from flask_appbuilder.charts.views import ChartView, TimeChartView, GroupByChartView
from flask_appbuilder.models.group import aggregate_count
from flask_appbuilder.widgets import ListThumbnail, ListWidget
from flask_appbuilder.widgets import FormVerticalWidget, FormInlineWidget, FormHorizontalWidget, ShowBlockWidget
from flask_appbuilder.models.sqla.filters import FilterStartsWith, FilterEqualFunction as FA
from app import appbuilder, db
 
 
from .models import *
 
 
 
# Basic Lists 
hide_list = ['created_by', 'changed_by', 'created_on', 'changed_on'] 
 
 
#To pretty Print from PersonMixin 
def pretty_month_year(value):
    return calendar.month_name[value.month] + ' ' + str(value.year)
 
 
def pretty_year(value):
    return str(value.year)
 
 
def fill_gender():
  try:
      db.session.add(Gender(name='Male'))
      db.session.add(Gender(name='Female'))
      db.session.commit()
  except:
      db.session.rollback()

class LawyerView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Lawyer, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class MedeventView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Medevent, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class BailView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Bail, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CaseView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Case, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CasecategoryView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Casecategory, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CauseofactionView(CompactCRUDMixin, ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Causeofaction, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CellView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Cell, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CommitaltypeView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Commitaltype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class ConstituencyView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Constituency, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CountyView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(County, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CourtView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Court, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CourtlevelView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Courtlevel, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CourtstationView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Courtstation, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DefendantView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Defendant, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DisciplineView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Discipline, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DoctemplateView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Doctemplate, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DocumentView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Document, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class FilingView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Filing, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class FilingtypeView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Filingtype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class GenderView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Gender, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class HearingView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Hearing, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class HearingtypeView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Hearingtype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class InvestigationView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Investigation, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class JoRankView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(JoRank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class JudicialofficerView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Judicialofficer, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class LawfirmView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Lawfirm, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class NatureofsuitView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Natureofsuit, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PaymentView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Payment, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PaymentmethodView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Paymentmethod, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PlaintiffView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Plaintiff, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PoliceofficerView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Policeofficer, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolicerankView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Policerank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PoliceroleView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Policerole, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolicestationView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Policestation, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolicestationtypeView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Policestationtype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PrisonView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Prison, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PrisoncommitalView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Prisoncommital, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class ProsecutorView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Prosecutor, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class ProsecutorteamView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Prosecutorteam, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class SecurityrankView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Securityrank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class SubcountyView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Subcounty, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class SuretyView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Surety, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class TownView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Town, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class VisitView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Visit, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class VistorView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Vistor, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class WarderView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Warder, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class WarderrankView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Warderrank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class WitnesView(ModelView):#MasterDetailView, MultipleView
    datamodel=SQLAInterface(Witnes, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"} 
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #related_views =[]
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \ 
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
    chart_title = 'Grouped  by Birth'
    label_columns = View.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class TimeChartView(GroupByChartView):
    datamodel = SQLAInterface( , db.session)
 
    chart_title = 'Grouped Birth '
    chart_type = 'AreaChart'
    label_columns = View.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


# How to create a MasterDetailView
 
#class DetailView(ModelView):
#    datamodel = SQLAInterface(DetailTable, db.session)
 
#class MasterView(MasterDetailView):
#    datamodel = SQLAInterface(MasterTable, db.session)
#    related_views = [DetailView]
 
 
# How to create a MultipleView
#class MultipleViewsExp(MultipleView):
#    views = [GroupModelView, ContactModelView]
 
#View Registration
db.create_all()
fill_gender()
 
appbuilder.add_view(LawyerView(), "Lawyers", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(MedeventView(), "Medevents", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(BailView(), "Bails", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CaseView(), "Cases", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CasecategoryView(), "Casecategorys", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CauseofactionView(), "Causeofactions", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CellView(), "Cells", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CommitaltypeView(), "Commitaltypes", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(ConstituencyView(), "Constituencys", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CountyView(), "Countys", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CourtView(), "Courts", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CourtlevelView(), "Courtlevels", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(CourtstationView(), "Courtstations", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(DefendantView(), "Defendants", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(DisciplineView(), "Disciplines", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(DoctemplateView(), "Doctemplates", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(DocumentView(), "Documents", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(FilingView(), "Filings", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(FilingtypeView(), "Filingtypes", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(GenderView(), "Genders", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(HearingView(), "Hearings", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(HearingtypeView(), "Hearingtypes", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(InvestigationView(), "Investigations", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(JoRankView(), "JoRanks", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(JudicialofficerView(), "Judicialofficers", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(LawfirmView(), "Lawfirms", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(NatureofsuitView(), "Natureofsuits", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PaymentView(), "Payments", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PaymentmethodView(), "Paymentmethods", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PlaintiffView(), "Plaintiffs", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PoliceofficerView(), "Policeofficers", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PolicerankView(), "Policeranks", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PoliceroleView(), "Policeroles", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PolicestationView(), "Policestations", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PolicestationtypeView(), "Policestationtypes", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PrisonView(), "Prisons", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(PrisoncommitalView(), "Prisoncommitals", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(ProsecutorView(), "Prosecutors", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(ProsecutorteamView(), "Prosecutorteams", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(SecurityrankView(), "Securityranks", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(SubcountyView(), "Subcountys", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(SuretyView(), "Suretys", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(TownView(), "Towns", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(VisitView(), "Visits", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(VistorView(), "Vistors", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(WarderView(), "Warders", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(WarderrankView(), "Warderranks", icon="fa-folder-open-o", category="Setup") 

appbuilder.add_view(WitnesView(), "Witness", icon="fa-folder-open-o", category="Setup") 

 
 
appbuilder.add_view(LawyerChartView(), 'Lawyer Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(LawyerTimeChartView(), 'Lawyer Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(PlaintiffChartView(), 'Plaintiff Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(PlaintiffTimeChartView(), 'Plaintiff Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(WitnesChartView(), 'Witnes Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(WitnesTimeChartView(), 'Witnes Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(SuretyChartView(), 'Surety Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(SuretyTimeChartView(), 'Surety Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(ProsecutorChartView(), 'Prosecutor Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(ProsecutorTimeChartView(), 'Prosecutor Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(PoliceofficerChartView(), 'Policeofficer Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(PoliceofficerTimeChartView(), 'Policeofficer Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(JudicialofficerChartView(), 'Judicialofficer Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(JudicialofficerTimeChartView(), 'Judicialofficer Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(DefendantChartView(), 'Defendant Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(DefendantTimeChartView(), 'Defendant Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(VisitorChartView(), 'Visitor Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(VisitorTimeChartView(), 'Visitor Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(WarderChartView(), 'Warder Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(WarderTimeChartView(), 'Warder Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(VisitChartView(), 'Visit Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(VisitTimeChartView(), 'Visit Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(DisciplineChartView(), 'Discipline Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(DisciplineTimeChartView(), 'Discipline Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(MedeventChartView(), 'Medevent Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(MedeventTimeChartView(), 'Medevent Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(HearingChartView(), 'Hearing Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(HearingTimeChartView(), 'Hearing Time Chart', icon='fa-dashboard', category='Reports')
 
appbuilder.add_view(PrisoncommitalChartView(), 'Prisoncommital Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(PrisoncommitalTimeChartView(), 'Prisoncommital Time Chart', icon='fa-dashboard', category='Reports')
 
#appbuilder.add_separator("Setup")
#appbuilder.add_separator("My Views")
#appbuilder.add_link(name, href, icon='', label='', category='', category_icon='', category_label='', baseview=None)
