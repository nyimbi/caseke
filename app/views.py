# coding: utf-8
# views.py AUTOGENERATED BY gen_script.sh from kp4.py
# Copyright (C) Nyimbi Odero, Sun Aug 13 05:04:25 EAT 2017


import calendar
from flask import redirect, flash, url_for, Markup
from flask import render_template
from flask_appbuilder.models.sqla.interface import SQLAInterface
from flask_appbuilder.views import ModelView, BaseView, MasterDetailView, MultipleView, RestCRUDView, CompactCRUDMixin
from flask_appbuilder import ModelView, CompactCRUDMixin, aggregate_count, action, expose, BaseView, has_access
from flask_appbuilder.charts.views import ChartView, TimeChartView, GroupByChartView
from flask_appbuilder.models.group import aggregate_count
from flask_appbuilder.widgets import ListThumbnail, ListWidget
from flask_appbuilder.widgets import FormVerticalWidget, FormInlineWidget, FormHorizontalWidget, ShowBlockWidget
from flask_appbuilder.models.sqla.filters import FilterStartsWith, FilterEqualFunction as FA
from app import appbuilder, db


from .models import *



# Basic Lists
hide_list = ['created_by', 'changed_by', 'created_on', 'changed_on']


#To pretty Print from PersonMixin
def pretty_month_year(value):
    return calendar.month_name[value.month] + ' ' + str(value.year)
 
 
def pretty_year(value):
    return str(value.year)
 
 
def fill_gender():
  try:
      db.session.add(Gender(name='Male'))
      db.session.add(Gender(name='Female'))
      db.session.commit()
  except:
      db.session.rollback()

class BailView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Bail, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CaseView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Case, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns +['start_delay','end_delay']
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ['policestation','ob_number','report_date','casecategory']
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = casey_fieldset
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    # @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    # def muldelete(self, items):
    #     self.datamodel.delete_all(items)
    #     self.update_redirect()
    #     return redirect(self.get_redirect())
    
class CaseCourtView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Case, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = case_columns_court #person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = casey_fieldset
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


class CasePoliceView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Case, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = case_columns_police #person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = casey_fieldset
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


class CasecategoryView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Casecategory, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset + [('County', {'fields': ['indictable', 'is_criminal'], 'expanded': True})]#+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CauseofactionView(CompactCRUDMixin, ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Causeofaction, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns =  ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CommitaltypeView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Commitaltype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class ConstituencyView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Constituency, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Parents', {'fields': ['county1'], 'expanded': True})] + ref_fieldset
        #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CountyView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(County, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns #+ contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CourtView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Court, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Court Station', {'fields': ['courtstation'], 'expanded': True})] + ref_fieldset #+ place_fieldset#+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CourtlevelView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Courtlevel, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
		ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class CourtstationView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Courtstation, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Parents', {'fields': ['town1', 'courtlevel'], 'expanded': True})] + place_fieldset #person_fieldset + contact_fieldset #+  activity_fieldset +  + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DefendantView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Defendant, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = person_list_columns #+ ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			person_fieldset + contact_fieldset +person_docs_fieldset + employment_fieldset+ biometric_fieldset + medical_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DisciplineView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Discipline, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Person', {'fields': ['defendant1'], 'expanded': True})] + activity_fieldset #+ place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DocarchiveView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Docarchive, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ['name', 'scandate'] #person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Doc Archive', {'fields': ['name', 'scandate', 'archival', 'doc'], 'expanded': True})] +[('Tags', {'fields': ['tag'], 'expanded': True})]# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DoctemplateView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Doctemplate, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns + ['search_vector']
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns +['search_vector']
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns =  ref_columns #+ contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset + doc_edit_fieldset #+ [('Tags', {'fields': ['tag'], 'expanded': True})]#person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class DocumentView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Document, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = doc_columns #person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
         doc_edit_fieldset + [('Tags', {'fields': ['confidential','locked','pagecount','tag'], 'expanded': True})]
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class EventlogView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Eventlog, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class FilingView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Filing, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Character', {'fields': ['case1','filingtype','urgent', 'urgentreason','uploaddate'], 'expanded': True})] + \
	    [('Filing', {'fields': ['case1','urgent', 'urgentreason'], 'expanded': True})]
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    

class FilingMultiView(MasterDetailView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Filing, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    related_views =[DocumentView]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Character', {'fields': ['case1','filingtype','urgent', 'urgentreason','uploaddate'], 'expanded': True})] + \
	    [('Filing', {'fields': ['case1','urgent', 'urgentreason'], 'expanded': True})]
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())

class FilingtypeView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Filingtype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset  #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class GateregisterView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Gateregister, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class GenderView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Gender, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    
	


class HearingView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Hearing, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class HearingtypeView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Hearingtype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class InvestigationView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Investigation, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class JoRankView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(JoRank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class JudicialofficerView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Judicialofficer, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class LawfirmView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Lawfirm, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset + place_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class LawyerView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Lawyer, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class MedeventView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Medevent, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class NatureofsuitView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Natureofsuit, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PaymentView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Payment, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PaymentmethodView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Paymentmethod, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PlaintiffView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Plaintiff, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = person_list_columns # + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			 person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolicerankView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Policerank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PoliceroleView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Policerole, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolicestationView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Policestation, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns =  ref_columns +['town1', 'policestationtype']
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			[('Town',{'fields':['town1','policestationtype']})] +ref_fieldset + place_fieldset # + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolicestationtypeView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Policestationtype, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PolofficerView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Polofficer, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = person_list_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PrisonView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Prison, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    # search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    # #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    # add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PrisoncellView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Prisoncell, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    # #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    # #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    # search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    # #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    # add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    # #label_columns = {"contact_group":"Contacts Group"}
    # #add_columns = person_list_columns + ref_columns + contact_columns
    # #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    # #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    # #page_size = 10
    # #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PrisoncommitalView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Prisoncommital, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class PrisonerpropertyView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Prisonerproperty, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class ProsecutorView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Prosecutor, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class ProsecutorteamView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Prosecutorteam, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns =  ref_columns + ['prosecutors']
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class RemissionView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Remission, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class SecurityrankView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Securityrank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset +[('Prisons', {'fields': ['prisons'], 'expanded': True})]#+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class SubcountyView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Subcounty, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns =  ref_columns + ['county1']
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			[('County', {'fields': ['county1'], 'expanded': True})] + ref_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class SuretyView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Surety, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class TagView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Tag, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class TownView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Town, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
	    [('Parents', {'fields': ['subcounty1'], 'expanded': True})] + ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class VisitView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Visit, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class VisitorView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Visitor, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class WarderView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Warder, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class WarderrankView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Warderrank, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    list_columns = ref_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    edit_fieldsets = add_fieldsets = \
			ref_fieldset #+ person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    



class WitnesView(ModelView):#MasterDetailView, MultipleView, CompactCRUDMixin
    datamodel=SQLAInterface(Witnes, db.session)
    #add_title =
    #list_title =
    #edit_title =
    #show_title =
    #add_widget = (FormVerticalWidget|FormInlineWidget)
    #show_widget = ShowBlockWidget
    #list_widget = (ListThumbnail|ListWidget)
    #base_order = ("name", "asc")
    #base_filters = [[created_by, FilterEqualFunction, get_user]] #[name, FilterStartsWith, a]],
    #search_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    search_exclude_columns = person_exclude_columns + biometric_columns + person_search_exclude_columns
    #search_form_query_rel_fields = [(group:[[name,FilterStartsWith,W]]}
    add_exclude_columns = edit_exclude_columns = audit_exclude_columns
    #label_columns = {"contact_group":"Contacts Group"}
    #add_columns = person_list_columns + ref_columns + contact_columns
    #edit_columns = person_list_columns + ref_columns + contact_columns
    #list_columns = person_list_columns + ref_columns + contact_columns
    #list_widget = ListBlock|ListItem|ListThumbnail|ListWidget (default)
    #page_size = 10
    #related_views =[]
    #formatters_columns = {‘some_date_col’: lambda x: x.isoformat() }
    #show_fieldsets = person_show_fieldset + contact_fieldset
    #edit_fieldsets = add_fieldsets = \
			# ref_fieldset + person_fieldset + contact_fieldset #+  activity_fieldset + place_fieldset + biometric_fieldset + employment_fieldset
    #description_columns = {"name":"your models name column","address":"the address column"}
    #show_template = "appbuilder/general/model/show_cascade.html"
    #edit_template = "appbuilder/general/model/edit_cascade.html"


    @action("muldelete", "Delete", Markup("<p>Delete all Really?</p><p>Ok then...</p>"), "fa-rocket")
    def muldelete(self, items):
        self.datamodel.delete_all(items)
        self.update_redirect()
        return redirect(self.get_redirect())
    


 
class LawyerChartView(GroupByChartView):
    datamodel = SQLAInterface(Lawyer , db.session)
    chart_title = 'Grouped Lawyer by Birth'
    chart_3d = 'true'
    label_columns = LawyerView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class LawyerTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Lawyer , db.session)
 
    chart_title = 'Grouped Birth Lawyer'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = LawyerView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class PlaintiffChartView(GroupByChartView):
    datamodel = SQLAInterface(Plaintiff , db.session)
    chart_title = 'Grouped Plaintiff by Birth'
    chart_3d = 'true'
    label_columns = PlaintiffView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class PlaintiffTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Plaintiff , db.session)
 
    chart_title = 'Grouped Birth Plaintiff'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = PlaintiffView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class WitnesChartView(GroupByChartView):
    datamodel = SQLAInterface(Witnes , db.session)
    chart_title = 'Grouped Witnes by Birth'
    chart_3d = 'true'
    label_columns = WitnesView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class WitnesTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Witnes , db.session)
 
    chart_title = 'Grouped Birth Witnes'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = WitnesView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class SuretyChartView(GroupByChartView):
    datamodel = SQLAInterface(Surety , db.session)
    chart_title = 'Grouped Surety by Birth'
    chart_3d = 'true'
    label_columns = SuretyView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class SuretyTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Surety , db.session)
 
    chart_title = 'Grouped Birth Surety'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = SuretyView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class ProsecutorChartView(GroupByChartView):
    datamodel = SQLAInterface(Prosecutor , db.session)
    chart_title = 'Grouped Prosecutor by Birth'
    chart_3d = 'true'
    label_columns = ProsecutorView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class ProsecutorTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Prosecutor , db.session)
 
    chart_title = 'Grouped Birth Prosecutor'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = ProsecutorView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class PoliceofficerChartView(GroupByChartView):
    datamodel = SQLAInterface(Polofficer , db.session)
    chart_title = 'Grouped Policeofficer by Birth'
    chart_3d = 'true'
    label_columns = PolofficerView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class PoliceofficerTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Polofficer , db.session)
 
    chart_title = 'Grouped Birth Policeofficer'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = PolofficerView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class JudicialofficerChartView(GroupByChartView):
    datamodel = SQLAInterface(Judicialofficer , db.session)
    chart_title = 'Grouped Judicialofficer by Birth'
    chart_3d = 'true'
    label_columns = JudicialofficerView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class JudicialofficerTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Judicialofficer , db.session)
 
    chart_title = 'Grouped Birth Judicialofficer'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = JudicialofficerView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class DefendantChartView(GroupByChartView):
    datamodel = SQLAInterface(Defendant , db.session)
    chart_title = 'Grouped Defendant by Birth'
    chart_3d = 'true'
    label_columns = DefendantView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class DefendantTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Defendant , db.session)
 
    chart_title = 'Grouped Birth Defendant'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = DefendantView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class VisitorChartView(GroupByChartView):
    datamodel = SQLAInterface(Visitor , db.session)
    chart_title = 'Grouped Visitor by Birth'
    chart_3d = 'true'
    label_columns = VisitorView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class VisitorTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Visitor , db.session)
 
    chart_title = 'Grouped Birth Visitor'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = VisitorView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class WarderChartView(GroupByChartView):
    datamodel = SQLAInterface(Warder , db.session)
    chart_title = 'Grouped Warder by Birth'
    chart_3d = 'true'
    label_columns = WarderView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class WarderTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Warder , db.session)
 
    chart_title = 'Grouped Birth Warder'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = WarderView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class VisitChartView(GroupByChartView):
    datamodel = SQLAInterface(Visit , db.session)
    chart_title = 'Grouped Visit by Birth'
    chart_3d = 'true'
    label_columns = VisitView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class VisitTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Visit , db.session)
 
    chart_title = 'Grouped Birth Visit'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = VisitView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class DisciplineChartView(GroupByChartView):
    datamodel = SQLAInterface(Discipline , db.session)
    chart_title = 'Grouped Discipline by Birth'
    chart_3d = 'true'
    label_columns = DisciplineView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class DisciplineTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Discipline , db.session)
 
    chart_title = 'Grouped Birth Discipline'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = DisciplineView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class MedeventChartView(GroupByChartView):
    datamodel = SQLAInterface(Medevent , db.session)
    chart_title = 'Grouped Medevent by Birth'
    chart_3d = 'true'
    label_columns = MedeventView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class MedeventTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Medevent , db.session)
 
    chart_title = 'Grouped Birth Medevent'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = MedeventView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class HearingChartView(GroupByChartView):
    datamodel = SQLAInterface(Hearing , db.session)
    chart_title = 'Grouped Hearing by Birth'
    chart_3d = 'true'
    label_columns = HearingView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class HearingTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Hearing , db.session)
 
    chart_title = 'Grouped Birth Hearing'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = HearingView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class PrisoncommitalChartView(GroupByChartView):
    datamodel = SQLAInterface(Prisoncommital , db.session)
    chart_title = 'Grouped Prisoncommital by Birth'
    chart_3d = 'true'
    label_columns = PrisoncommitalView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class PrisoncommitalTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Prisoncommital , db.session)
 
    chart_title = 'Grouped Birth Prisoncommital'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = PrisoncommitalView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


 
class CaseChartView(GroupByChartView):
    datamodel = SQLAInterface(Case , db.session)
    chart_title = 'Grouped Case by Birth'
    chart_3d = 'true'
    label_columns = CaseView.label_columns
    chart_type = 'PieChart'
 
    definitions = [
        {
            'group' : 'age_today',
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group' : 'gender',
            "series" : [(aggregate_count,"age_today")]
        }
    ]
 
 
class CaseTimeChartView(GroupByChartView):
    datamodel = SQLAInterface(Case , db.session)
 
    chart_title = 'Grouped Birth Case'
    chart_type = 'AreaChart'
    chart_3d = 'true'
    label_columns = CaseView.label_columns
    definitions = [
        {
            'group' : 'age_today',
            'formatter': pretty_month_year,
            "series" : [(aggregate_count,"age_today")]
        },
        {
            'group': 'age_today',
            'formatter': pretty_year,
            "series" : [(aggregate_count,"age_today")]
        }
    ]


# How to create a MasterDetailView

#class DetailView(ModelView):
#    datamodel = SQLAInterface(DetailTable, db.session)

#class MasterView(MasterDetailView):
#    datamodel = SQLAInterface(MasterTable, db.session)
#    related_views = [DetailView]


# How to create a MultipleView
#class MultipleViewsExp(MultipleView):
#    views = [GroupModelView, ContactModelView]

#View Registration
db.configure_mappers() #very important!
db.create_all()
fill_gender()

# Menu structure
#1. Setup
#2. Categories
#3. People
#4. Processes
#5. Reports
#6. Help

# Setup
appbuilder.add_view(CountyView(), "Counties", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(SubcountyView(), "Sub Counties", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(ConstituencyView(), "Constituencies", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(TownView(), "Towns", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(CourtstationView(), "Court Stations", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(CourtView(), "Courts", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(PaymentmethodView(), "Payment Methods", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(LawfirmView(), "Law Firms", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(PolicestationView(), "Police Stations", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(PrisonView(), "Prisons", icon="fa-folder-open-o", category="Setup")
appbuilder.add_view(PrisoncellView(), "Prison Cells", icon="fa-folder-open-o", category="Setup")

# Categories
appbuilder.add_view(CourtlevelView(), "Court Levels", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(CauseofactionView(), "Causes of Action", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(CasecategoryView(), "Case Categories", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(NatureofsuitView(), "Nature of Suit", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(CommitaltypeView(), "Commital Types", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(FilingtypeView(), "Filing Types", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(GenderView(), "Genders", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(HearingtypeView(), "Hearing Types", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(JoRankView(), "Judicial Ranks", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(PolicerankView(), "Police Ranks", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(WarderrankView(), "Warder Ranks", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(PoliceroleView(), "Police Roles", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(PolicestationtypeView(), "Police Station Types", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(ProsecutorteamView(), "Prosecutor Teams", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(SecurityrankView(), "Prison Security Ranks", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(TagView(), "Tags", icon="fa-folder-open-o", category="Categories")
appbuilder.add_view(DoctemplateView(), "Doc Templates", icon="fa-folder-open-o", category="Categories")


# People
appbuilder.add_view(PlaintiffView(), "Plaintiffs", icon="fa-folder-open-o", category="People")
appbuilder.add_view(DefendantView(), "Defendants", icon="fa-folder-open-o", category="People")
appbuilder.add_view(WitnesView(), "Witnesses", icon="fa-folder-open-o", category="People")
appbuilder.add_view(JudicialofficerView(), "Judicial Officers", icon="fa-folder-open-o", category="People")
appbuilder.add_view(LawyerView(), "Lawyers", icon="fa-folder-open-o", category="People")
appbuilder.add_view(PolofficerView(), "Police Officers", icon="fa-folder-open-o", category="People")
appbuilder.add_view(ProsecutorView(), "Prosecutors", icon="fa-folder-open-o", category="People")
appbuilder.add_view(VisitorView(), "Visitors", icon="fa-folder-open-o", category="People")
appbuilder.add_view(WarderView(), "Warders", icon="fa-folder-open-o", category="People")
appbuilder.add_view(SuretyView(), "Sureties", icon="fa-folder-open-o", category="People")



# Process

appbuilder.add_view(CaseView(), "Cases", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(InvestigationView(), "Investigations", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(FilingView(), "Filings", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(FilingMultiView(), "File & Docs", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(HearingView(), "Hearings", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(BailView(), "Bail", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(DocumentView(), "Documents", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(DocarchiveView(), "Doc Archives", icon="fa-folder-open-o", category="Process")



appbuilder.add_view(PrisoncommitalView(), "Prison Commital", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(GateregisterView(), "Gate Registers", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(DisciplineView(), "Disciplinary", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(MedeventView(), "Medical Events", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(PaymentView(), "Payments", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(PrisonerpropertyView(), "Prisoner Property", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(RemissionView(), "Remissions", icon="fa-folder-open-o", category="Process")
appbuilder.add_view(VisitView(), "Visits", icon="fa-folder-open-o", category="Process")





# Charts & Reports
appbuilder.add_view(EventlogView(), "Eventlogs", icon="fa-folder-open-o", category="Reports")
appbuilder.add_view(LawyerChartView(), 'Lawyer Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(LawyerTimeChartView(), 'Lawyer Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(PlaintiffChartView(), 'Plaintiff Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(PlaintiffTimeChartView(), 'Plaintiff Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(WitnesChartView(), 'Witnes Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(WitnesTimeChartView(), 'Witnes Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(SuretyChartView(), 'Surety Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(SuretyTimeChartView(), 'Surety Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(ProsecutorChartView(), 'Prosecutor Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(ProsecutorTimeChartView(), 'Prosecutor Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(PoliceofficerChartView(), 'Policeofficer Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(PoliceofficerTimeChartView(), 'Policeofficer Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(JudicialofficerChartView(), 'Judicialofficer Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(JudicialofficerTimeChartView(), 'Judicialofficer Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(DefendantChartView(), 'Defendant Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(DefendantTimeChartView(), 'Defendant Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(VisitorChartView(), 'Visitor Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(VisitorTimeChartView(), 'Visitor Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(WarderChartView(), 'Warder Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(WarderTimeChartView(), 'Warder Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(VisitChartView(), 'Visit Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(VisitTimeChartView(), 'Visit Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(DisciplineChartView(), 'Discipline Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(DisciplineTimeChartView(), 'Discipline Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(MedeventChartView(), 'Medevent Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(MedeventTimeChartView(), 'Medevent Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(HearingChartView(), 'Hearing Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(HearingTimeChartView(), 'Hearing Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(PrisoncommitalChartView(), 'Prisoncommital Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(PrisoncommitalTimeChartView(), 'Prisoncommital Time Chart', icon='fa-dashboard', category='Reports')

appbuilder.add_view(CaseChartView(), 'Case Age Chart', icon='fa-dashboard', category='Reports')
appbuilder.add_view(CaseTimeChartView(), 'Case Time Chart', icon='fa-dashboard', category='Reports')

#appbuilder.add_separator("Setup")
#appbuilder.add_separator("My Views")
#appbuilder.add_link(name, href, icon='', label='', category='', category_icon='', category_label='', baseview=None)
